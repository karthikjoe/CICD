name: Build and Deploy .NET 8 App to Azure VM

trigger:
  branches:
    include:
      - main

pool:
  name: CICDTest  # Your self-hosted agent pool

variables:
  appPoolName: 'website'
  publishFolder: 'D:\website-master_temp'
  deployFolder: 'D:\website-master'

steps:
- task: PowerShell@2
  displayName: 'Stop AppPool'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Stopping AppPool: $(appPoolName)"
      C:\Windows\System32\inetsrv\appcmd.exe stop apppool /apppool.name:"$(appPoolName)"

- checkout: self

# Skip this if .NET 8 is installed on your VM already
# - task: UseDotNet@2
#   inputs:
#     packageType: 'sdk'
#     version: '8.0.x'

- task: PowerShell@2
  displayName: 'Restore dependencies'
  inputs:
    targetType: 'inline'
    script: |
      dotnet restore

- task: PowerShell@2
  displayName: 'Build'
  inputs:
    targetType: 'inline'
    script: |
      dotnet build --configuration Release --no-restore

- task: PowerShell@2
  displayName: 'Publish'
  inputs:
    targetType: 'inline'
    script: |
      dotnet publish --configuration Release --output "$(publishFolder)"

- task: PowerShell@2
  displayName: 'Deploy to IIS folder'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Cleaning deploy folder: $(deployFolder)"
      Remove-Item -Recurse -Force "$(deployFolder)\*" -ErrorAction SilentlyContinue
      Write-Host "Copying files to deploy folder"
      Copy-Item -Path "$(publishFolder)\*" -Destination "$(deployFolder)" -Recurse

- task: PowerShell@2
  displayName: 'Start AppPool'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Starting AppPool: $(appPoolName)"
      C:\Windows\System32\inetsrv\appcmd.exe start apppool /apppool.name:"$(appPoolName)"
